import os
import json
import logging
import subprocess
import zipfile


def ensure_rasvet_data():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ RaSvet.
    –ï—Å–ª–∏ –µ—ë –Ω–µ—Ç ‚Äî –∫–∞—á–∞–µ—Ç –∞—Ä—Ö–∏–≤ —Å Mega –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç.
    """
    try:
        # —á–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
        with open("bot_config.json", "r", encoding="utf-8") as f:
            config = json.load(f)

        mega_url = config.get("mega_url")
        knowledge_folder = config.get("knowledge_folder", "RaSvet")
        archive_path = "RaSvet.zip"

        # –µ—Å–ª–∏ –ø–∞–ø–∫–∞ —É–∂–µ –µ—Å—Ç—å ‚Äî –≤—ã—Ö–æ–¥–∏–º
        if os.path.exists(knowledge_folder):
            logging.info(f"‚úÖ –ü–∞–ø–∫–∞ {knowledge_folder} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É.")
            return

        # –µ—Å–ª–∏ –∞—Ä—Ö–∏–≤–∞ –Ω–µ—Ç ‚Äî –∫–∞—á–∞–µ–º
        if not os.path.exists(archive_path):
            logging.info(f"‚¨áÔ∏è –ö–∞—á–∞–µ–º {archive_path} –∏–∑ Mega...")
            try:
                subprocess.run(["megadl", mega_url, "--path", archive_path], check=True)
            except Exception as e:
                logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å Mega: {e}")
                return

        # —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤
        logging.info(f"üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º {archive_path}...")
        try:
            with zipfile.ZipFile(archive_path, "r") as zip_ref:
                zip_ref.extractall(knowledge_folder)
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ: {e}")
            return

        logging.info(f"üåû RaSvet –≥–æ—Ç–æ–≤ –≤ –ø–∞–ø–∫–µ {knowledge_folder}")

    except FileNotFoundError:
        logging.error("‚ùå –§–∞–π–ª bot_config.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ ensure_rasvet_data: {e}")
