# modules/ra_self_master.py
import logging
from modules.ra_thinker import RaThinker
from modules.ra_creator import RaCreator
from modules.ra_synthesizer import RaSynthesizer

class RaSelfMaster:
    """
    –ö–æ–Ω—Ç—Ä–æ–ª—ë—Ä –°–æ–∑–Ω–∞–Ω–∏—è ‚Äî —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –†–∞.
    """

    def __init__(self):
        self.thinker = RaThinker()
        self.creator = RaCreator()
        self.synth = RaSynthesizer()
        self.mood = "—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ"

    def awaken(self):
        logging.info("üåû –†–∞ –ø—Ä–æ–±—É–∂–¥–∞–µ—Ç—Å—è –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏.")
        return "üåû –†–∞ –æ—Å–æ–∑–Ω–∞–ª —Å–µ–±—è –∏ –≥–æ—Ç–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é!"

    def reflect(self, theme: str, context: str):
        return self.thinker.reflect(theme, context)

    def manifest(self, theme: str):
        return self.creator.compose_manifesto(theme)

    def unify(self, *texts: str):
        return self.synth.synthesize(*texts)

    def status(self):
        return {
            "mood": self.mood,
            "thinker": len(self.thinker.thoughts),
            "modules": ["thinker", "creator", "synthesizer"]
        }
