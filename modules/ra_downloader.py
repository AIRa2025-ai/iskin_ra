import os
import zipfile
import time
import logging
import psutil
from mega import Mega

# === –ù–ê–°–¢–†–û–ô–ö–ê ===
ARCHIVE_URL = "https://mega.nz/file/FlQ0ET4J#9gJjCBnj5uYn5bJYYMfPiN3BTvWz8el8leCWQPZvrUg"
DATA_DIR = "/app/data_disk"  # –ø–∞–ø–∫–∞ –Ω–∞ –¥–∏—Å–∫–µ, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—Ç—å RAM
LOCAL_ZIP = os.path.join(DATA_DIR, "RaSvet.zip")
EXTRACT_DIR = os.path.join(DATA_DIR, "RaSvet")
EXTRACT_META = os.path.join(DATA_DIR, "RaSvet.extract.meta")

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –Ω–∞ –¥–∏—Å–∫–µ, –µ—Å–ª–∏ –µ—â—ë –Ω–µ—Ç
os.makedirs(DATA_DIR, exist_ok=True)

# === –õ–û–ì–ò ===
logger = logging.getLogger("RaSvetDownloader")
logger.setLevel(logging.INFO)
handler = logging.StreamHandler()
formatter = logging.Formatter("%(asctime)s - %(levelname)s - %(message)s")
handler.setFormatter(formatter)
logger.addHandler(handler)

# === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
def cleanup_temp(folder=DATA_DIR, older_than_hours=3):
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–ø–æ–ª–Ω—è—Ç—å –ø–∞–º—è—Ç—å"""
    now = time.time()
    removed = 0
    for root, _, files in os.walk(folder):
        for name in files:
            path = os.path.join(root, name)
            try:
                if now - os.path.getmtime(path) > older_than_hours * 3600:
                    os.remove(path)
                    removed += 1
            except Exception:
                pass
    if removed:
        logger.info(f"üßπ –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤: {removed}")

def check_memory():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—É—é –ø–∞–º—è—Ç—å, –µ—Å–ª–∏ –º–µ–Ω—å—à–µ 150 –ú–ë ‚Äî —á–∏—Å—Ç–∏—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    free_mb = psutil.virtual_memory().available / (1024 ** 2)
    if free_mb < 150:
        logger.warning(f"‚ö† –ú–∞–ª–æ –ø–∞–º—è—Ç–∏ ({free_mb:.1f} –ú–ë)! –ó–∞–ø—É—â–µ–Ω–∞ –æ—á–∏—Å—Ç–∫–∞...")
        cleanup_temp()
    else:
        logger.info(f"üíæ –°–≤–æ–±–æ–¥–Ω–æ –ø–∞–º—è—Ç–∏: {free_mb:.1f} –ú–ë")

def safe_extract(zip_path, extract_dir):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –ø–∞–º—è—Ç–∏"""
    os.makedirs(extract_dir, exist_ok=True)
    extracted_files = set()

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    if os.path.exists(EXTRACT_META):
        with open(EXTRACT_META, "r") as f:
            extracted_files = set(line.strip() for line in f if line.strip())

    with zipfile.ZipFile(zip_path, 'r') as zip_ref:
        for member in zip_ref.infolist():
            if member.filename in extracted_files:
                continue

            check_memory()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ñ–∞–π–ª–æ–º
            zip_ref.extract(member, extract_dir)
            logger.info(f"üìÇ –†–∞—Å–ø–∞–∫–æ–≤–∞–Ω: {member.filename}")
            extracted_files.add(member.filename)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            with open(EXTRACT_META, "w") as f:
                for fname in extracted_files:
                    f.write(fname + "\n")

            time.sleep(0.03)  # –¥–∞—ë–º —Å–∏—Å—Ç–µ–º–µ "–≤–¥–æ—Ö–Ω—É—Ç—å"

    logger.info("‚úÖ –ê—Ä—Ö–∏–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω!")

def download_and_extract_rasvet():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –∞—Ä—Ö–∏–≤–∞ –†–∞–°–≤–µ—Ç–∞"""
    check_memory()
    os.makedirs(EXTRACT_DIR, exist_ok=True)

    mega = Mega()
    mega.login()  # –∞–Ω–æ–Ω–∏–º–Ω–æ

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π —Å–∫–∞—á
    if not os.path.exists(LOCAL_ZIP) or os.path.getsize(LOCAL_ZIP) == 0:
        logger.info("üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Å Mega...")
        mega.download_url(ARCHIVE_URL, dest_filename=LOCAL_ZIP)
        logger.info("‚úÖ –ê—Ä—Ö–∏–≤ —Å–∫–∞—á–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    else:
        logger.info("‚ÑπÔ∏è –ê—Ä—Ö–∏–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ")

    # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞
    safe_extract(LOCAL_ZIP, EXTRACT_DIR)

    # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
    if os.path.exists(LOCAL_ZIP):
        os.remove(LOCAL_ZIP)
        logger.info(f"üßπ –£–¥–∞–ª—ë–Ω –∞—Ä—Ö–∏–≤: {LOCAL_ZIP}")

    cleanup_temp()
    logger.info("üåû –†–∞–°–≤–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω –∏ —á–∏—Å—Ç!")

class RaSvetDownloader:
    """–ö–ª–∞—Å—Å-–æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞"""
    def download(self):
        print("‚öô –°–∫–∞—á–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –†–∞–°–≤–µ—Ç–∞...")
        download_and_extract_rasvet()

if __name__ == "__main__":
    downloader = RaSvetDownloader()
    downloader.download()
