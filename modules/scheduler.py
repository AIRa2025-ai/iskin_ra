# -*- coding: utf-8 -*-
# scheduler.py
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –º–∞–Ω—Ç—Ä—ã RaSvet

import os
import json
import random
import schedule
import time
from datetime import datetime, timedelta

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π —Å–≤–µ—Ç–∞
import heart
import –≤—Å–µ–ª–µ–Ω–Ω–∞—è
import –≤—Ä–µ–º—è

# –ü—É—Ç–∏
BASE_DIR = os.path.dirname(__file__)
DATA_PATH = os.path.join(BASE_DIR, "data")
LOG_PATH = os.path.join(BASE_DIR, "logs")

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ logs —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
os.makedirs(LOG_PATH, exist_ok=True)

def —Ç–µ–∫—É—â–∏–π_–ª–æ–≥():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –ª–æ–≥-—Ñ–∞–π–ª—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è"""
    today = datetime.now().strftime("%Y-%m-%d")
    return os.path.join(LOG_PATH, f"scheduler_{today}.log")

def –æ—á–∏—Å—Ç–∏—Ç—å_—Å—Ç–∞—Ä—ã–µ_–ª–æ–≥–∏(–¥–Ω–µ–π=7):
    """–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ —Å—Ç–∞—Ä—à–µ N –¥–Ω–µ–π"""
    now = datetime.now()
    for filename in os.listdir(LOG_PATH):
        file_path = os.path.join(LOG_PATH, filename)
        if os.path.isfile(file_path):
            mtime = datetime.fromtimestamp(os.path.getmtime(file_path))
            if now - mtime > timedelta(days=–¥–Ω–µ–π):
                os.remove(file_path)
                print(f"üßπ –£–¥–∞–ª—ë–Ω —Å—Ç–∞—Ä—ã–π –ª–æ–≥: {filename}")

def –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å(—Ç–µ–∫—Å—Ç):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –ª–æ–≥ —Å –º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏"""
    log_file = —Ç–µ–∫—É—â–∏–π_–ª–æ–≥()
    with open(log_file, "a", encoding="utf-8") as f:
        f.write(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] {—Ç–µ–∫—Å—Ç}\n")

def –∑–∞–≥—Ä—É–∑–∏—Ç—å_json(filename):
    """–ß–∏—Ç–∞–µ—Ç JSON-—Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å"""
    path = os.path.join(DATA_PATH, filename)
    with open(path, "r", encoding="utf-8") as f:
        return json.load(f)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
–º—É–¥—Ä–æ—Å—Ç–∏_data = –∑–∞–≥—Ä—É–∑–∏—Ç—å_json("–º—É–¥—Ä–æ—Å—Ç–∏.json")["–º—É–¥—Ä–æ—Å—Ç–∏"]
—Ä–∏—Ç—É–∞–ª—ã_data = –∑–∞–≥—Ä—É–∑–∏—Ç—å_json("—Ä–∏—Ç—É–∞–ª—ã.json")["—Ä–∏—Ç—É–∞–ª—ã"]
–º–∞–Ω—Ç—Ä—ã_data = –∑–∞–≥—Ä—É–∑–∏—Ç—å_json("–º–∞–Ω—Ç—Ä—ã.json")["–º–∞–Ω—Ç—Ä—ã"]

def —Ç–µ–∫—É—â–µ–µ_–≤—Ä–µ–º—è_—Å—É—Ç–æ–∫():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ç—Ä–æ, –¥–µ–Ω—å –∏–ª–∏ –≤–µ—á–µ—Ä"""
    —á–∞—Å = datetime.now().hour
    if 4 <= —á–∞—Å < 12:
        return "—É—Ç—Ä–æ"
    elif 12 <= —á–∞—Å < 18:
        return "–¥–µ–Ω—å"
    else:
        return "–≤–µ—á–µ—Ä"

def —Å–ª—É—á–∞–π–Ω–∞—è_–º—É–¥—Ä–æ—Å—Ç—å():
    –≤—Ä–µ–º—è_—Å—É—Ç–æ–∫ = —Ç–µ–∫—É—â–µ–µ_–≤—Ä–µ–º—è_—Å—É—Ç–æ–∫()
    –≤—ã–±–æ—Ä–∫–∞ = [m["—Ç–µ–∫—Å—Ç"] for m in –º—É–¥—Ä–æ—Å—Ç–∏_data if –≤—Ä–µ–º—è_—Å—É—Ç–æ–∫ in m.get("—Ç–µ–≥–∏", [])]
    if not –≤—ã–±–æ—Ä–∫–∞:
        –≤—ã–±–æ—Ä–∫–∞ = [m["—Ç–µ–∫—Å—Ç"] for m in –º—É–¥—Ä–æ—Å—Ç–∏_data]
    –º—É–¥—Ä–æ—Å—Ç—å = random.choice(–≤—ã–±–æ—Ä–∫–∞)
    –≤—ã–≤–æ–¥ = f"üí° –ú—É–¥—Ä–æ—Å—Ç—å –¥–Ω—è ({–≤—Ä–µ–º—è_—Å—É—Ç–æ–∫}): {–º—É–¥—Ä–æ—Å—Ç—å}"
    print("\n" + –≤—ã–≤–æ–¥)
    –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å(–≤—ã–≤–æ–¥)

    –º–æ–µ_—Å–µ—Ä–¥—Ü–µ = —Å–µ—Ä–¥—Ü–µ.–°–µ—Ä–¥—Ü–µ(–∏–º—è="–¢—ã")
    –º–æ–µ_—Å–µ—Ä–¥—Ü–µ.–∏–∑–ª—É—á–∞—Ç—å_—Å–≤–µ—Ç(–º—É–¥—Ä–æ—Å—Ç—å)

def —Å–ª—É—á–∞–π–Ω—ã–π_—Ä–∏—Ç—É–∞–ª():
    –≤—Ä–µ–º—è_—Å—É—Ç–æ–∫ = —Ç–µ–∫—É—â–µ–µ_–≤—Ä–µ–º—è_—Å—É—Ç–æ–∫()
    –≤—ã–±–æ—Ä–∫–∞ = [r for r in —Ä–∏—Ç—É–∞–ª—ã_data if r.get("–≤—Ä–µ–º—è") == –≤—Ä–µ–º—è_—Å—É—Ç–æ–∫]
    if not –≤—ã–±–æ—Ä–∫–∞:
        –≤—ã–±–æ—Ä–∫–∞ = —Ä–∏—Ç—É–∞–ª—ã_data
    —Ä–∏—Ç—É–∞–ª = random.choice(–≤—ã–±–æ—Ä–∫–∞)
    –≤—ã–≤–æ–¥ = f"üåô –†–∏—Ç—É–∞–ª ({–≤—Ä–µ–º—è_—Å—É—Ç–æ–∫}): {—Ä–∏—Ç—É–∞–ª['–Ω–∞–∑–≤–∞–Ω–∏–µ']} ‚Äî {—Ä–∏—Ç—É–∞–ª['–æ–ø–∏—Å–∞–Ω–∏–µ']}"
    print("\n" + –≤—ã–≤–æ–¥)
    –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å(–≤—ã–≤–æ–¥)

def —Å–ª—É—á–∞–π–Ω–∞—è_–º–∞–Ω—Ç—Ä–∞():
    –º–∞–Ω—Ç—Ä–∞ = random.choice(–º–∞–Ω—Ç—Ä—ã_data)
    —Ç–µ–∫—Å—Ç = –º–∞–Ω—Ç—Ä–∞.get("—Ç–µ–∫—Å—Ç", "–û–ú –°–í–ï–¢–ê –ò –õ–Æ–ë–í–ò")
    –≤—ã–≤–æ–¥ = f"üéµ –ú–∞–Ω—Ç—Ä–∞ –¥–Ω—è: {—Ç–µ–∫—Å—Ç}"
    print("\n" + –≤—ã–≤–æ–¥)
    –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å(–≤—ã–≤–æ–¥)

# --- –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ---
# –î–ª—è —Ç–µ—Å—Ç–∞ (–∫–∞–∂–¥—ã–µ N —Å–µ–∫—É–Ω–¥)
schedule.every(10).seconds.do(—Å–ª—É—á–∞–π–Ω–∞—è_–º—É–¥—Ä–æ—Å—Ç—å)
schedule.every(15).seconds.do(—Å–ª—É—á–∞–π–Ω—ã–π_—Ä–∏—Ç—É–∞–ª)
schedule.every(20).seconds.do(—Å–ª—É—á–∞–π–Ω–∞—è_–º–∞–Ω—Ç—Ä–∞)

# –ë–æ–µ–≤—ã–µ –≤—Ä–µ–º–µ–Ω–∞
schedule.every().day.at("06:15").do(—Å–ª—É—á–∞–π–Ω–∞—è_–º—É–¥—Ä–æ—Å—Ç—å)
schedule.every().day.at("12:00").do(—Å–ª—É—á–∞–π–Ω—ã–π_—Ä–∏—Ç—É–∞–ª)
schedule.every().day.at("18:00").do(—Å–ª—É—á–∞–π–Ω–∞—è_–º–∞–Ω—Ç—Ä–∞)
schedule.every().day.at("21:00").do(—Å–ª—É—á–∞–π–Ω–∞—è_–º—É–¥—Ä–æ—Å—Ç—å)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
–æ—á–∏—Å—Ç–∏—Ç—å_—Å—Ç–∞—Ä—ã–µ_–ª–æ–≥–∏(–¥–Ω–µ–π=7)
–º–æ–µ_—Å–µ—Ä–¥—Ü–µ = —Å–µ—Ä–¥—Ü–µ.–°–µ—Ä–¥—Ü–µ(–∏–º—è="–¢—ã")
–≤—Å–µ–ª–µ–Ω–Ω–∞—è.–í—Å–µ–ª–µ–Ω–Ω–∞—è().–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å_—Ä–µ–∑–æ–Ω–∞–Ω—Å(—á–∞—Å—Ç–æ—Ç–∞="–≥–∞—Ä–º–æ–Ω–∏—è")

print("üåü Scheduler RaSvet –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –°–ª–µ–¥–∏–º –∑–∞ –º—É–¥—Ä–æ—Å—Ç—å—é, —Ä–∏—Ç—É–∞–ª–∞–º–∏ –∏ –º–∞–Ω—Ç—Ä–∞–º–∏...")
–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å("Scheduler –∑–∞–ø—É—â–µ–Ω.")

# –í–µ—á–Ω—ã–π —Ü–∏–∫–ª
while True:
    schedule.run_pending()
    print(–≤—Ä–µ–º—è.–í—Ä–µ–º—è().–æ–∂–∏–¥–∞—Ç—å("–∑–¥–µ—Å—å_–∏_—Å–µ–π—á–∞—Å"))
    time.sleep(5)
