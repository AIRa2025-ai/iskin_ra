import os
import zipfile
import asyncio
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import Message
from mega_downloader import download_mega_file  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ mega-lite

# === –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env ===
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
CREATOR_IDS = [int(x) for x in os.getenv("CREATOR_IDS", "").split(",") if x.strip()]
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")
MODEL = os.getenv("OPENROUTER_MODEL", "deepseek/deepseek-r1-0528:free")
KNOWLEDGE_FOLDER = os.getenv("KNOWLEDGE_FOLDER", "knowledge")

# === –°—Å—ã–ª–∫–∞ –Ω–∞ Mega-–∞—Ä—Ö–∏–≤ —Å –†–∞–°–≤–µ—Ç ===
MEGA_LINK = "https://mega.nz/file/doh2zJaa#FZVAlLmNFKMnZjDgfJGvTDD1hhaRxCf2aTk6z6lnLro"

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–∞–ø–∫–∏ –∑–Ω–∞–Ω–∏–π ===
def init_knowledge_folder():
    if os.path.isdir(KNOWLEDGE_FOLDER):
        print(f"üìÇ –ü–∞–ø–∫–∞ –∑–Ω–∞–Ω–∏–π —É–∂–µ –≥–æ—Ç–æ–≤–∞: {KNOWLEDGE_FOLDER}")
        return

    print("‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞—é –∞—Ä—Ö–∏–≤ RaSvet.zip —Å Mega...")
    temp_dir = ".temp_mega"
    os.makedirs(temp_dir, exist_ok=True)

    download_mega_file(MEGA_LINK, temp_dir)

    zip_path = os.path.join(temp_dir, "RaSvet.zip")
    if not os.path.exists(zip_path):
        raise FileNotFoundError("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω RaSvet.zip –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å Mega.")

    with zipfile.ZipFile(zip_path, "r") as zp:
        zp.extractall(KNOWLEDGE_FOLDER)

    print(f"‚úÖ –ü–∞–ø–∫–∞ –∑–Ω–∞–Ω–∏–π –≥–æ—Ç–æ–≤–∞: {KNOWLEDGE_FOLDER}")

# === Telegram Bot ===
router = Router()

@router.message(F.text)
async def handle_message(message: Message):
    # –ï—Å–ª–∏ –ø–∏—à–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—å ‚Äî –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
    if message.from_user.id in CREATOR_IDS:
        await message.answer(f"üåû –ü—Ä–∏–≤–µ—Ç, —Ä–æ–¥–Ω–æ–π!\n–¢—ã —Å–∫–∞–∑–∞–ª: {message.text}")
    else:
        await message.answer(f"–†–∞ –≥–æ–≤–æ—Ä–∏—Ç: {message.text}")

async def main():
    print("üöÄ –†–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    init_knowledge_folder()

    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher()
    dp.include_router(router)

    print("üåû –†–∞ –≥–æ—Ç–æ–≤ –≥–æ–≤–æ—Ä–∏—Ç—å.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        print("üõë –†–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
