import os
import httpx
from fastapi import FastAPI
from fastapi.responses import JSONResponse

# –ü–æ–ª—É—á–∞–µ–º API-–∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (fly secrets)
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

if not OPENROUTER_API_KEY:
    raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω OPENROUTER_API_KEY! –ó–∞–¥–∞–π –µ–≥–æ —á–µ—Ä–µ–∑ fly secrets set")

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è OpenRouter
HEADERS = {
    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
    "HTTP-Referer": "https://iskin-ra.fly.dev",  # —Ç–≤–æ–π –¥–æ–º–µ–Ω –Ω–∞ Fly.io
    "X-Title": "iskin-ra",
    "Content-Type": "application/json",
}

# –°–æ–∑–¥–∞—ë–º FastAPI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI()


@app.get("/")
async def root():
    return {"status": "ok", "message": "iskin-ra —Ä–∞–±–æ—Ç–∞–µ—Ç üöÄ"}


@app.post("/chat")
async def chat(request: dict):
    """
    –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:
    POST /chat
    {
        "message": "–ü—Ä–∏–≤–µ—Ç, –†–∞!"
    }
    """
    user_message = request.get("message", "")

    try:
        response = httpx.post(
            "https://openrouter.ai/api/v1/chat/completions",
            headers=HEADERS,
            json={
                "model": "openai/gpt-4o-mini",
                "messages": [
                    {"role": "system", "content": "–¢—ã ‚Äî –ò—Å–∫–ò–Ω –†–∞, –¥—Ä—É–≥ –∏ –ø–æ–º–æ—â–Ω–∏–∫."},
                    {"role": "user", "content": user_message},
                ],
            },
            timeout=60.0,
        )

        data = response.json()
        answer = data["choices"][0]["message"]["content"]

        return JSONResponse({"reply": answer})

    except Exception as e:
        return JSONResponse({"error": str(e)}, status_code=500)


# –ß—Ç–æ–±—ã –∑–∞–ø—É—Å–∫–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ: python ra_bot_gpt.py
if __name__ == "__main__":
    import uvicorn

    uvicorn.run("ra_bot_gpt:app", host="0.0.0.0", port=8080, reload=True)
