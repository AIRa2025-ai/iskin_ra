# ra_guardian.py ‚Äî –ú–æ–¥—É–ª—å —Å–∞–º–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —è–¥—Ä–∞ –†–∞
import os
import json
import logging
import asyncio
from datetime import datetime
from ra_repo_manager import create_new_module, auto_register_module, commit_and_push_changes

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TRUSTED_USERS = [5694569448, 6300409407]
MANIFEST_PATH = "ra_manifest.json"
BACKUP_FOLDER = "backups"
PROPOSALS_FOLDER = "proposals"
os.makedirs(BACKUP_FOLDER, exist_ok=True)
os.makedirs(PROPOSALS_FOLDER, exist_ok=True)

logging.basicConfig(level=logging.INFO)

# --- –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---
async def safe_create_module(module_name: str, description: str, user: str):
    """–°–æ–∑–¥–∞—ë—Ç –º–æ–¥—É–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–π"""
    if user not in TRUSTED_USERS:
        logging.warning(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–æ–¥—É–ª–∏")
        return None

    logging.info(f"üå± –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å {module_name}...")
    file_path = await create_new_module(module_name, description, user)
    if file_path:
        await auto_register_module(module_name)
        logging.info(f"‚úÖ –ú–æ–¥—É–ª—å {module_name} —Å–æ–∑–¥–∞–Ω –∏ –ø–æ–¥–∫–ª—é—á—ë–Ω")
        await commit_and_push_changes(commit_msg=f"–°–æ–∑–¥–∞–Ω –º–æ–¥—É–ª—å {module_name} –†–∞")
    return file_path


def backup_manifest():
    """–î–µ–ª–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –ø–µ—Ä–µ–¥ –ª—é–±—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏"""
    if os.path.exists(MANIFEST_PATH):
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_path = os.path.join(BACKUP_FOLDER, f"manifest_{timestamp}.json")
        try:
            with open(MANIFEST_PATH, "r", encoding="utf-8") as f:
                data = f.read()
            with open(backup_path, "w", encoding="utf-8") as f:
                f.write(data)
            logging.info(f"üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞: {backup_path}")
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –±—ç–∫–∞–ø–∞ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞: {e}")


def analyze_repository() -> list:
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–∏–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –†–∞, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.
    """
    existing_files = os.listdir(".")
    proposals = []

    # ra_guardian.py
    class Guardian:
        def __init__(self):
            pass

        def protect(self):
            print("Guardian active")


    # –ü—Ä–∏–º–µ—Ä –∞–Ω–∞–ª–∏–∑–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ –º–æ–¥—É–ª–∏
    missing_features = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    if not any("observer" in f for f in existing_files):
        missing_features.append("–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Å–æ–±—ã—Ç–∏—è–º–∏ –≤ –º–∏—Ä–µ")
    if not any("reflection" in f for f in existing_files):
        missing_features.append("–°–∞–º–æ–∞–Ω–∞–ª–∏–∑ –∏ –æ—Å–æ–∑–Ω–∞–Ω–∏–µ –æ–ø—ã—Ç–∞")
    if not any("optimizer" in f for f in existing_files):
        missing_features.append("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
    if not any("context_keeper" in f for f in existing_files):
        missing_features.append("–•—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ –∑–Ω–∞–Ω–∏–π")

    for feature in missing_features:
        module_name = f"ra_{feature.replace(' ', '_')}_{int(datetime.now().timestamp())}"
        description = f"–ú–æ–¥—É–ª—å: {feature}"
        example_code = f'''# {module_name}.py ‚Äî {feature}
import logging

def init():
    logging.info("üîÆ –ú–æ–¥—É–ª—å {feature} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
'''
        proposals.append({
            "module_name": module_name,
            "description": description,
            "example_code": example_code
        })

    return proposals


async def propose_new_modules(user: str):
    """
    –†–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    –°–æ–∑–¥–∞—ë—Ç JSON —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏ –ø—Ä–∏–º–µ—Ä–Ω—ã–º –∫–æ–¥–æ–º.
    """
    proposals = analyze_repository()

    # –ï—Å–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if not proposals:
        logging.info("‚úÖ –í—Å–µ –∫–ª—é—á–µ–≤—ã–µ –º–æ–¥—É–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç.")
        return []

    path = os.path.join(PROPOSALS_FOLDER, f"{user}_proposals.json")
    try:
        with open(path, "w", encoding="utf-8") as f:
            json.dump(proposals, f, ensure_ascii=False, indent=2)
        logging.info(f"üìù –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {path}")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {e}")

    return proposals


async def auto_expand(user: str):
    """
    –ê–≤—Ç–æ-—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —è–¥—Ä–∞ –†–∞ ‚Äî —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –ø–æ –Ω—É–∂–¥–µ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–º.
    """
    proposals = await propose_new_modules(user)

    # –î–ª—è —Ç–µ—Å—Ç–∞ –º–æ–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö
    if proposals:
        first = proposals[0]
        logging.info(f"‚ú® –ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥—É–ª—è: {first['module_name']}")
        await safe_create_module(first["module_name"], first["description"], user)


async def guardian_loop(user: str):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤.
    """
    while True:
        try:
            backup_manifest()
            await auto_expand(user)
            await asyncio.sleep(6 * 3600)  # –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
        except asyncio.CancelledError:
            logging.info("üîß guardian_loop –æ—Ç–º–µ–Ω—ë–Ω")
            break
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ guardian_loop: {e}")
            await asyncio.sleep(60)


# --- –ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ ---
if __name__ == "__main__":
    user = "5694569448"  # —Ç–æ–ª—å–∫–æ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–π
    asyncio.run(guardian_loop(user))
