#core/ra_memory.py
import json
import os
import logging
from datetime import datetime
from utils.memory_sync import sync_to_github

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ü–∞–ø–∫–∞ –¥–ª—è –ø–∞–º—è—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
MEMORY_FOLDER = os.getenv("RA_MEMORY_FOLDER", "memory")
os.makedirs(MEMORY_FOLDER, exist_ok=True)

AUTO_SYNC = True  # –∞–≤—Ç–æ-–ø—É—à –Ω–∞ Git
MAX_MESSAGES = 200  # –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
KEEP_FULL_MEMORY_USERS = [5694569448, 6300409407]  # —Å—é–¥–∞ —Ç–≤–æ–π ID –∏ ID –ú–∏–ª–∞–Ω—ã

def get_memory_file(user_id):
    """–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø–∞–º—è—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return os.path.join(MEMORY_FOLDER, f"{user_id}.json")

def load_user_memory(user_id):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–∞–º—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    path = get_memory_file(user_id)
    if os.path.exists(path):
        try:
            with open(path, "r", encoding="utf-8") as f:
                return json.load(f)
        except Exception as e:
            logging.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–º—è—Ç–∏ {user_id}: {e}")
    return {"messages": []}

def save_user_memory(user_id, memory):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–∞–º—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        with open(get_memory_file(user_id), "w", encoding="utf-8") as f:
            json.dump(memory, f, ensure_ascii=False, indent=2)
        logging.info(f"üíæ –ü–∞–º—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ ({len(memory['messages'])} —Å–æ–æ–±—â–µ–Ω–∏–π)")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ {user_id}: {e}")

def append_user_memory(user_id, message):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞–º—è—Ç—å"""
    memory = load_user_memory(user_id)
    memory.setdefault("messages", [])
    memory["messages"].append({
        "message": message,
        "timestamp": datetime.utcnow().isoformat()
    })

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å–ø–∏—Å–∫–µ KEEP_FULL_MEMORY_USERS, –ø—Ä–∏–º–µ–Ω—è–µ–º –ª–∏–º–∏—Ç
    if user_id not in KEEP_FULL_MEMORY_USERS and len(memory["messages"]) > MAX_MESSAGES:
        memory["messages"] = memory["messages"][-MAX_MESSAGES:]

    save_user_memory(user_id, memory)

    # –ê–≤—Ç–æ-–ø—É—à –Ω–∞ Git
    if AUTO_SYNC:
        try:
            sync_to_github(f"Memory update for user {user_id}")
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ-–ø—É—à–∞ –ø–∞–º—è—Ç–∏: {e}")
