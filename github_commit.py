# github_commit.py
import os
import requests
import json
import logging

GITHUB_TOKEN = os.getenv("GITHUB_TOKEN")  # –¥–æ–±–∞–≤—å —ç—Ç–æ—Ç —Å–µ–∫—Ä–µ—Ç –≤ Fly –∏–ª–∏ GitHub Secrets
REPO = "AIRa2025-ai/iskin_ra"  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π

def create_commit_push(branch_name, files_dict, commit_message="üåÄ auto-update by Ra"):
    """
    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –≤–µ—Ç–∫—É, –∫–æ–º–º–∏—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç Pull Request –Ω–∞ GitHub.
    files_dict: {"path/to/file.py": "new content", ...}
    """
    if not GITHUB_TOKEN:
        raise RuntimeError("‚ùå GITHUB_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏!")

    headers = {
        "Authorization": f"Bearer {GITHUB_TOKEN}",
        "Accept": "application/vnd.github.v3+json",
    }

    # 1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º SHA –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ç–∫–∏
    r = requests.get(f"https://api.github.com/repos/{REPO}/git/refs/heads/main", headers=headers)
    if r.status_code != 200:
        raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ç–∫–∏: {r.text}")
    base_sha = r.json()["object"]["sha"]

    # 2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ç–∫—É
    branch_ref = f"refs/heads/{branch_name}"
    r = requests.post(f"https://api.github.com/repos/{REPO}/git/refs", headers=headers, json={
        "ref": branch_ref,
        "sha": base_sha
    })
    if r.status_code not in (200, 201):
        logging.warning(f"‚ö†Ô∏è –í–µ—Ç–∫–∞ –º–æ–≥–ª–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å: {r.text}")

    # 3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º blob –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
    blobs = []
    for path, content in files_dict.items():
        r = requests.post(f"https://api.github.com/repos/{REPO}/git/blobs", headers=headers,
                          json={"content": content, "encoding": "utf-8"})
        blobs.append({
            "path": path,
            "mode": "100644",
            "type": "blob",
            "sha": r.json()["sha"]
        })

    # 4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –¥–µ—Ä–µ–≤–æ
    r = requests.post(f"https://api.github.com/repos/{REPO}/git/trees", headers=headers,
                      json={"base_tree": base_sha, "tree": blobs})
    tree_sha = r.json()["sha"]

    # 5Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    r = requests.post(f"https://api.github.com/repos/{REPO}/git/commits", headers=headers,
                      json={"message": commit_message, "tree": tree_sha, "parents": [base_sha]})
    commit_sha = r.json()["sha"]

    # 6Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ç–∫—É –Ω–æ–≤—ã–º –∫–æ–º–º–∏—Ç–æ–º
    r = requests.patch(f"https://api.github.com/repos/{REPO}/git/refs/heads/{branch_name}",
                       headers=headers, json={"sha": commit_sha})
    if r.status_code not in (200, 201):
        raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ—Ç–∫–∏: {r.text}")

    # 7Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º Pull Request
    r = requests.post(f"https://api.github.com/repos/{REPO}/pulls", headers=headers, json={
        "title": commit_message,
        "head": branch_name,
        "base": "main"
    })

    if r.status_code not in (200, 201):
        raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PR: {r.text}")

    pr_data = r.json()
    logging.info(f"‚úÖ –°–æ–∑–¥–∞–Ω PR #{pr_data['number']} ‚Äî {pr_data['html_url']}")
    return pr_data
