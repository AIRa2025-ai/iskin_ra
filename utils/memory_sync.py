import logging
import subprocess
import os
from datetime import datetime

# –ú–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
GIT_REPO_DIR = os.path.dirname(os.path.abspath(__file__))  # —Ç–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞

def sync_to_github(commit_message=None):
    if commit_message is None:
        commit_message = f"Auto memory update: {datetime.utcnow().isoformat()}"

    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        subprocess.run(["git", "add", "."], cwd=GIT_REPO_DIR, check=True)
        # –ö–æ–º–º–∏—Ç–∏–º
        subprocess.run(["git", "commit", "-m", commit_message], cwd=GIT_REPO_DIR, check=True)
        # –ü—É—à–∏–º
        subprocess.run(["git", "push"], cwd=GIT_REPO_DIR, check=True)
        print(f"‚úÖ Memory synced to Git: {commit_message}")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Git sync failed: {e}")
        logging.info("üíæ –ü–∞–º—è—Ç—å –†–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å GitHub")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏: {e}")
