# utils/memory_sync.py
import logging
import subprocess
import os
from datetime import datetime

# –ü—É—Ç—å –∫ –∫–æ—Ä–Ω—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
GIT_REPO_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))

def sync_to_github(commit_message=None):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–æ–µ–∫—Ç–∞ —Å GitHub."""
    if commit_message is None:
        commit_message = f"Auto memory update: {datetime.utcnow().isoformat()}"

    try:
        subprocess.run(["git", "add", "."], cwd=GIT_REPO_DIR, check=True)
        subprocess.run(["git", "commit", "-m", commit_message], cwd=GIT_REPO_DIR, check=True)
        subprocess.run(["git", "push"], cwd=GIT_REPO_DIR, check=True)
        print(f"‚úÖ Memory synced to Git: {commit_message}")
        logging.info("üíæ –ü–∞–º—è—Ç—å –†–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å GitHub")
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è Git sync skipped or no changes: {e}")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏: {e}")
